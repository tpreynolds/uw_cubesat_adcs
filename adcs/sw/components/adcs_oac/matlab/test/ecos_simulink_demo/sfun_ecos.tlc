%% file : sfun_ecos.tlc
%% 
%% Description:
%%   Simulink Coder TLC Code Generation file for sfun_ecos
%% 
%% Simulink version      : 8.8 (R2016b) 25-Aug-2016
%% TLC file generated on : 07-Feb-2019 18:41:07

/%
     %%%-MATLAB_Construction_Commands_Start
     def = legacy_code('initialize');
     def.SFunctionName = 'sfun_ecos';
     def.OutputFcnSpec = 'callecos(int32 u1,int32 u2,int32 u3,int32 u4,int32 u5,double u6[2],int32 u7[3],int32 u8[6],double u9[6],double u10[5],int32 u11[1],int32 u12[3],int32 u13[1],double u14[1],double u15[1],double y1[4])';
     def.HeaderFiles = {'ecos.h'};
     def.SourceFiles = {'matlab_main.c', 'cone.c', 'ctrlc.c', 'ecos.c', 'equil.c', 'expcone.c', 'kkt.c', 'preproc.c', 'spla.c', 'splamm.c', 'timer.c', 'wright_omega.c', 'ldl.c', 'amd_1.c', 'amd_2.c', 'amd_aat.c', 'amd_control.c', 'amd_defaults.c', 'amd_dump.c', 'amd_global.c', 'amd_info.c', 'amd_order.c', 'amd_post_tree.c', 'amd_postorder.c', 'amd_preprocess.c', 'amd_valid.c'};
     def.IncPaths = {'./ecos/include'};
     def.SrcPaths = {'./ecos/src'};
     legacy_code('sfcn_tlc_generate', def);
     %%%-MATLAB_Construction_Commands_End
%/

%implements sfun_ecos "C"

%% Function: BlockTypeSetup ===============================================
%function BlockTypeSetup (block, system) void

    %% The Target Language must be C
    %if ::GenCPP==1 && !IsModelReferenceSimTarget()
        %<LibReportFatalError("This S-Function generated by the Legacy Code Tool must be only used with the C Target Language")>
    %endif

    %<LibAddToCommonIncludes("ecos.h")>
    %<SLibAddToStaticSources("matlab_main.c")>
    %<SLibAddToStaticSources("cone.c")>
    %<SLibAddToStaticSources("ctrlc.c")>
    %<SLibAddToStaticSources("ecos.c")>
    %<SLibAddToStaticSources("equil.c")>
    %<SLibAddToStaticSources("expcone.c")>
    %<SLibAddToStaticSources("kkt.c")>
    %<SLibAddToStaticSources("preproc.c")>
    %<SLibAddToStaticSources("spla.c")>
    %<SLibAddToStaticSources("splamm.c")>
    %<SLibAddToStaticSources("timer.c")>
    %<SLibAddToStaticSources("wright_omega.c")>
    %<SLibAddToStaticSources("ldl.c")>
    %<SLibAddToStaticSources("amd_1.c")>
    %<SLibAddToStaticSources("amd_2.c")>
    %<SLibAddToStaticSources("amd_aat.c")>
    %<SLibAddToStaticSources("amd_control.c")>
    %<SLibAddToStaticSources("amd_defaults.c")>
    %<SLibAddToStaticSources("amd_dump.c")>
    %<SLibAddToStaticSources("amd_global.c")>
    %<SLibAddToStaticSources("amd_info.c")>
    %<SLibAddToStaticSources("amd_order.c")>
    %<SLibAddToStaticSources("amd_post_tree.c")>
    %<SLibAddToStaticSources("amd_postorder.c")>
    %<SLibAddToStaticSources("amd_preprocess.c")>
    %<SLibAddToStaticSources("amd_valid.c")>
%endfunction

%% Function: BlockInstanceSetup ===========================================
%function BlockInstanceSetup (block, system) void
    %<LibBlockSetIsExpressionCompliant(block)>
%endfunction

%% Function: Outputs ======================================================
%function Outputs (block, system) Output
    %assign u1_val = LibBlockInputSignal(0, "", "", 0)
    %assign u2_val = LibBlockInputSignal(1, "", "", 0)
    %assign u3_val = LibBlockInputSignal(2, "", "", 0)
    %assign u4_val = LibBlockInputSignal(3, "", "", 0)
    %assign u5_val = LibBlockInputSignal(4, "", "", 0)
    %assign u6_ptr = LibBlockInputSignalAddr(5, "", "", 0)
    %assign u7_ptr = LibBlockInputSignalAddr(6, "", "", 0)
    %assign u8_ptr = LibBlockInputSignalAddr(7, "", "", 0)
    %assign u9_ptr = LibBlockInputSignalAddr(8, "", "", 0)
    %assign u10_ptr = LibBlockInputSignalAddr(9, "", "", 0)
    %assign u11_ptr = LibBlockInputSignalAddr(10, "", "", 0)
    %assign u12_ptr = LibBlockInputSignalAddr(11, "", "", 0)
    %assign u13_ptr = LibBlockInputSignalAddr(12, "", "", 0)
    %assign u14_ptr = LibBlockInputSignalAddr(13, "", "", 0)
    %assign u15_ptr = LibBlockInputSignalAddr(14, "", "", 0)
    %assign y1_ptr = LibBlockOutputSignalAddr(0, "", "", 0)
    %% 
    callecos(%<u1_val>, %<u2_val>, %<u3_val>, %<u4_val>, %<u5_val>, (real_T*)%<u6_ptr>, (int32_T*)%<u7_ptr>, (int32_T*)%<u8_ptr>, (real_T*)%<u9_ptr>, (real_T*)%<u10_ptr>, (int32_T*)%<u11_ptr>, (int32_T*)%<u12_ptr>, (int32_T*)%<u13_ptr>, (real_T*)%<u14_ptr>, (real_T*)%<u15_ptr>, %<y1_ptr>);
%endfunction

%% [EOF]
